---
layout: post
title: "[XDOJ1003]最喜欢的数字"
date: 2011-11-16 00:01
comments: true
categories: algorithm
---
这个题是一个比较容易想到的简单的DP，不过交上去总是TLE，我本机跑极限数据也要2秒多，首先观察了一下题目的结果，算了一下平均数值是2.6，也就是说有非常多的数值是2，那么可以加一个小的优化，就是在DP到最小值是1的时候就跳出，输出2。在本机跑了一下大概能优化0.5秒，不过还是TLE。于是在lpx的提示下加了一个非常重要的优化，就是在枚举小于N而且N能被其整除的素数的时候，遇到一个符合要求的素数X，就把枚举的范围N=N/X，这个是可以用数学方法证明的，例如16，我找到一个2，那么在16-8之间就不会有符合要求的素数。这个优化非常的有用，极限数据的时间缩小到了0.2秒。不过这个题的答案是固定的，如果在比赛中想不出来这个优化的方法，可以选择打表。
```c
#include <stdio.h>
#include <memory.h>
int a[100001],u[100001],x1[1003],x2[1003],res[100001],f[100001];
int m;
 void prime (void) {
    //int n=10000;
    //freopen("testprime.out","w",stdout);
    //int a[10001];
    int i,j,res;
    memset(a,0,sizeof(a));
    i=2;
    while (i<=333) {
        if (!a[i]) {
            j=i+i;
            while (j<=100000) {
                a[j]=1;
                j+=i;
            }
        }
        i++;
    }
    res=0;
    for (i=2;i<=100000;i++) {
        if (!a[i]) {
            res++;
            u[res]=i;
            //printf("%d,",i);
        }
    }
    m=res;
    //printf("\n%d",res);
    //return 0;
}

int main () {
    int i,j,min,max,n,temp;
    //freopen("1.in","r",stdin);
    prime();
    n=1;
    max=0;
    while (scanf("%d %d",&x1[n],&x2[n])!=EOF) {
        if (x2[n]>max)
            max=x2[n];
        n++;
    }
    n--;
    f[1]=0;
    res[1]=0;
    for (i=2;i<=max;i++) {
        if (!a[i]) {
            f[i]=1;
            res[i]=res[i-1]+f[i];
            continue;
        }
        min=f[i-1];
        temp=i;
        for (j=1;u[j]<=temp;j++) {
            if (i%u[j]==0 && f[i/u[j]]<min) {
                min=f[i/u[j]];
            }
            if (i%u[j]==0)
                temp=temp/u[j];
            if (min==1) break;
        }
        f[i]=min+1;
        res[i]=res[i-1]+f[i];
    }
    //for (i=1;i<=max;i++) {
        //printf("%d ",f[i]);
    //}
    for (i=1;i<=n;i++)
        printf("%d\n",res[x2[i]]-res[x1[i]]+f[x1[i]]);
    return 0;
}
```